version: 2.1

orbs:
  moul: moul/build@1.16.0        # https://github.com/moul/build
  retry: moul/retry@0.6.0        # https://github.com/moul/retry
  codecov: codecov/codecov@1.0.5
  docker: circleci/docker@0.5.13
  gotools: gotest/tools@0.0.10

jobs:
  #go-docker:
  #  working_directory: /go/src/pathwar.land/go
  #  docker:
  #    - image: docker:18.06.3-ce-git
  #  steps:
  #    - checkout:
  #        path: /go/src/pathwar.land
  #    - setup_remote_docker
  #    - docker/build:
  #        image: pathwar/pathwar

  go-build:
    working_directory: /go/src/pathwar.land
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout:
          path: /go/src/pathwar.land
      - moul/mod-download
      - gotools/mod-tidy-check
      - run: cd go && make install
      - run: cd go && SKIP_SLOW_TESTS=1 make unittest GO_TEST_OPTS="-test.timeout=120s -count=10"
      - run: cd go && SKIP_SLOW_TESTS=0 make unittest GO_TEST_OPTS="-test.timeout=120s -count=2"
      - moul/install_golangci-lint
      - run: cd go && PATH=$PATH:$(pwd)/bin make lint
      - codecov/upload:
          file: go/coverage.txt

  go-generate:
    working_directory: /go/src/pathwar.land
    docker:
      - image: pathwar/protoc:6
    steps:
      - checkout
      - run: find . -name gen.sum -delete
      - run: cd go && go mod vendor && make generate_local && make tidy
      - run: cd docs && make generate_local
      - run: |
          git status | cat
          git diff -w | cat
          git diff-index -w --quiet HEAD --

  challenge-build:
    working_directory: /go/src/pathwar.land
    docker:
      - image: docker/compose:1.24.1
    steps:
      - checkout
      - setup_remote_docker
      - run: apk add --no-cache make
      - run: cd challenges && make build

  docker-integration:
    docker:
      - image: docker/compose:1.24.0
    steps:
      - checkout
      - retry/install
      - run: retry -m 3 apk --no-cache add curl openssl make bash
      - setup_remote_docker
      - run: cd tool/integration; retry -m 3 make pull
      - run: cd tool/integration; retry -m 3 make build-server
      - run: cd tool/integration; retry -m 3 make build-web
      - run: cd tool/integration; retry -m 3 make build # the rest
      - run: cd tool/integration; retry -m 3 make run
      - run: cd tool/integration; make run # yes, again
      - run: cd tool/integration; make logs-once
      - run:
          name: See server logs
          command: cd tool/integration; make logs-once
          when: on_fail

workflows:
  main:
    jobs:
      - go-build
      #- go-docker # already tested in docker-integration
      - go-generate
      - challenge-build
      - docker-integration
      #- githooks
